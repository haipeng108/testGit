<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- spring配置文件，主要配置和业务逻辑有关的 -->
	<context:component-scan base-package="com.atguigu">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- ====================数据源事务控制 ==========================================-->
	
	<bean id="pooleDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- ============================================================================== -->
	<!-- 配置和mybatis的整合==================================================== -->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的全局配置文件位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 数据源 与spring中的dataSource Bean的id相同-->
		<property name="dataSource" ref="pooleDataSource"></property>
		<!-- 指定mybatis mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	<!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有dao接口的实现类，加入到ioc的容器 -->
		<property name="basePackage" value="com.atguigu.crud.dao"></property>
	</bean>
	<!-- ============================================================================== -->
	
	
	<!-- 事务控制==================================================================== -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pooleDataSource"></property>
	</bean>
	<!-- 开启基于注解的事务使用xml配置形式的事务 -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut expression="execution(* com.atguigu.crud.service..*)" id="txPoint"/>
		<!-- 配置事务增强器 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	<!-- 配置事务增强，事务如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- *代表所有方法都是事务方法 -->
			<tx:method name="*"/>
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- ============================================================================== -->
	<!-- spring配置文件的核心点(数据源，与mybatis的整合，事务控制) -->
</beans>
